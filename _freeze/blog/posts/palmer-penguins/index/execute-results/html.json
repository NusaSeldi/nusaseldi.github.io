{
  "hash": "e020520ee54c4dc3ee6b13907cfa4bfc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Palmer Penguins Classification with XGboost and Resampling Method\"\nauthor: \"Nusa Seldi\"\ndate: \"2024-05-22\"\ncategories: [code, xgboost, resampling, cross validation, tidymodels, palmerpenguins]\n---\n\n\nThis time, we will build a XGboost model to classify the gender of palmer penguins dataset. We also gonna use resampling method to measure how well our model performance.\n\n## Load library\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) \nlibrary(tidymodels) \nlibrary(palmerpenguins) \nlibrary(vip)\n```\n:::\n\n\n## Dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguin_df <- penguins\nglimpse(penguin_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n```\n\n\n:::\n:::\n\n\n## Viz the dataset\n\nFrom the visualization, we can say that male penguin bigger than female penguin in terms of body mass and flipper lenght.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguin_df <- penguin_df |>\n  drop_na(sex) |>\n  select(-year, -island)\n\npenguin_df |> ggplot(aes(bill_length_mm, bill_depth_mm, color = sex)) +\n  geom_point() +\n  facet_wrap(~species)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\npenguin_df |> ggplot(aes(species, body_mass_g, color = sex)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n```{.r .cell-code}\npenguin_df |> ggplot(aes(flipper_length_mm, body_mass_g, color = sex)) +\n  geom_point() +\n  facet_wrap(~species)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-3.png){width=672}\n:::\n:::\n\n\n## Build a model\n\nBefore we build model, we split the data into training set and testing set. After that, we use resampling method called V-fold cross validation (CV) and build a xgboost model. For preprocessing, we impute the missing data with median and then normalize the numeric predictors and create dummy variable for categorical predictors.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(99)\npenguin_split <- initial_split(penguin_df, prop = 0.7, strata = sex)\npenguin_train <- training(penguin_split)\npenguin_test <- testing(penguin_split)\n\npenguin_fold <- vfold_cv(data = penguin_train, strata = sex)\n\nbt_spec <- boost_tree() |>\n  set_mode(\"classification\") |>\n  set_engine(\"xgboost\")\n\npenguin_recipe <- recipe(sex ~ ., data = penguin_train) |>\n  step_impute_median(all_numeric_predictors()) |>\n  step_normalize(all_numeric_predictors()) |>\n  step_dummy(all_nominal_predictors())\n\npenguin_wf <- workflow() |>\n  add_recipe(penguin_recipe) |>\n  add_model(bt_spec)\n\nbt_fit <- penguin_wf |> fit_resamples(resamples = penguin_fold, control = control_resamples(save_pred = TRUE))\n```\n:::\n\n\n## Evaluating the model\n\nAs we can see, there are 10 results created from the resampling. Last, we fit the test data and evaluate the model with accuracy and ROC, also create confusion matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollect_metrics(bt_fit, summarize = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 5\n   id     .metric  .estimator .estimate .config             \n   <chr>  <chr>    <chr>          <dbl> <chr>               \n 1 Fold01 accuracy binary         0.917 Preprocessor1_Model1\n 2 Fold01 roc_auc  binary         0.986 Preprocessor1_Model1\n 3 Fold02 accuracy binary         0.875 Preprocessor1_Model1\n 4 Fold02 roc_auc  binary         0.892 Preprocessor1_Model1\n 5 Fold03 accuracy binary         0.958 Preprocessor1_Model1\n 6 Fold03 roc_auc  binary         0.972 Preprocessor1_Model1\n 7 Fold04 accuracy binary         0.917 Preprocessor1_Model1\n 8 Fold04 roc_auc  binary         0.993 Preprocessor1_Model1\n 9 Fold05 accuracy binary         0.875 Preprocessor1_Model1\n10 Fold05 roc_auc  binary         0.917 Preprocessor1_Model1\n11 Fold06 accuracy binary         0.913 Preprocessor1_Model1\n12 Fold06 roc_auc  binary         0.970 Preprocessor1_Model1\n13 Fold07 accuracy binary         0.913 Preprocessor1_Model1\n14 Fold07 roc_auc  binary         0.962 Preprocessor1_Model1\n15 Fold08 accuracy binary         0.909 Preprocessor1_Model1\n16 Fold08 roc_auc  binary         0.959 Preprocessor1_Model1\n17 Fold09 accuracy binary         0.909 Preprocessor1_Model1\n18 Fold09 roc_auc  binary         0.983 Preprocessor1_Model1\n19 Fold10 accuracy binary         0.955 Preprocessor1_Model1\n20 Fold10 roc_auc  binary         1     Preprocessor1_Model1\n```\n\n\n:::\n\n```{.r .cell-code}\npenguin_final <- penguin_wf |>\n  last_fit(penguin_split)\n\ncollect_metrics(penguin_final)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 4\n  .metric  .estimator .estimate .config             \n  <chr>    <chr>          <dbl> <chr>               \n1 accuracy binary         0.901 Preprocessor1_Model1\n2 roc_auc  binary         0.960 Preprocessor1_Model1\n```\n\n\n:::\n\n```{.r .cell-code}\nresult <- collect_predictions(penguin_final)\n\nresult |> conf_mat(sex, .pred_class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          Truth\nPrediction female male\n    female     41    1\n    male        9   50\n```\n\n\n:::\n\n```{.r .cell-code}\npenguin_final |>\n  extract_fit_parsnip() |>\n  vip(aesthetics = list(fill = \"navy\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}