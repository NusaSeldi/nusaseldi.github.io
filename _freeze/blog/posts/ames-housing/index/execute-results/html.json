{
  "hash": "183b9b9985034a75fc7c137cd543564a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Ames Housing Price Prediction\"\nauthor: \"Nusa Seldi\"\ndate: \"2024-06-10\"\ncategories: [code, mlp, dimensionality reduction, PCA, ICA, tidymodels, ames-housing]\n---\n\n\nPredicting price of the house using multilayer perceptron model and also trying dimensionality reduction\n\n## Introduction\n\nHello! Today we will try to participate in another kaggle Getting Started competitions. The challenge in this competition is to predict the final price of each house using the data provided. For this competition, we will build a multilayer perceptron model to complete the challenge. We also gonna tune the parameters to optimize our model.\n\n## Import Library\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\ntidyverse,\ntidymodels,\nskimr,\nfastICA\n)\n```\n:::\n\n\n## Load and inspect the data\n\nThere are 1460 observation and 81 variables for training dataset also 1459 observation and 80 variables for test dataset that we got from kaggle. For training dataset consist of 43 categorical data and 38 numeric data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ames_train <- read_csv(\"train.csv\")\n  ames_test <- read_csv(\"test.csv\")\n  \n  dim(ames_train)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1460   81\n```\n\n\n:::\n\n```{.r .cell-code}\n  glimpse(ames_train)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,460\nColumns: 81\n$ Id            <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1…\n$ MSSubClass    <dbl> 60, 20, 60, 70, 60, 50, 20, 60, 50, 190, 20, 60, 20, 20,…\n$ MSZoning      <chr> \"RL\", \"RL\", \"RL\", \"RL\", \"RL\", \"RL\", \"RL\", \"RL\", \"RM\", \"R…\n$ LotFrontage   <dbl> 65, 80, 68, 60, 84, 85, 75, NA, 51, 50, 70, 85, NA, 91, …\n$ LotArea       <dbl> 8450, 9600, 11250, 9550, 14260, 14115, 10084, 10382, 612…\n$ Street        <chr> \"Pave\", \"Pave\", \"Pave\", \"Pave\", \"Pave\", \"Pave\", \"Pave\", …\n$ Alley         <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ LotShape      <chr> \"Reg\", \"Reg\", \"IR1\", \"IR1\", \"IR1\", \"IR1\", \"Reg\", \"IR1\", …\n$ LandContour   <chr> \"Lvl\", \"Lvl\", \"Lvl\", \"Lvl\", \"Lvl\", \"Lvl\", \"Lvl\", \"Lvl\", …\n$ Utilities     <chr> \"AllPub\", \"AllPub\", \"AllPub\", \"AllPub\", \"AllPub\", \"AllPu…\n$ LotConfig     <chr> \"Inside\", \"FR2\", \"Inside\", \"Corner\", \"FR2\", \"Inside\", \"I…\n$ LandSlope     <chr> \"Gtl\", \"Gtl\", \"Gtl\", \"Gtl\", \"Gtl\", \"Gtl\", \"Gtl\", \"Gtl\", …\n$ Neighborhood  <chr> \"CollgCr\", \"Veenker\", \"CollgCr\", \"Crawfor\", \"NoRidge\", \"…\n$ Condition1    <chr> \"Norm\", \"Feedr\", \"Norm\", \"Norm\", \"Norm\", \"Norm\", \"Norm\",…\n$ Condition2    <chr> \"Norm\", \"Norm\", \"Norm\", \"Norm\", \"Norm\", \"Norm\", \"Norm\", …\n$ BldgType      <chr> \"1Fam\", \"1Fam\", \"1Fam\", \"1Fam\", \"1Fam\", \"1Fam\", \"1Fam\", …\n$ HouseStyle    <chr> \"2Story\", \"1Story\", \"2Story\", \"2Story\", \"2Story\", \"1.5Fi…\n$ OverallQual   <dbl> 7, 6, 7, 7, 8, 5, 8, 7, 7, 5, 5, 9, 5, 7, 6, 7, 6, 4, 5,…\n$ OverallCond   <dbl> 5, 8, 5, 5, 5, 5, 5, 6, 5, 6, 5, 5, 6, 5, 5, 8, 7, 5, 5,…\n$ YearBuilt     <dbl> 2003, 1976, 2001, 1915, 2000, 1993, 2004, 1973, 1931, 19…\n$ YearRemodAdd  <dbl> 2003, 1976, 2002, 1970, 2000, 1995, 2005, 1973, 1950, 19…\n$ RoofStyle     <chr> \"Gable\", \"Gable\", \"Gable\", \"Gable\", \"Gable\", \"Gable\", \"G…\n$ RoofMatl      <chr> \"CompShg\", \"CompShg\", \"CompShg\", \"CompShg\", \"CompShg\", \"…\n$ Exterior1st   <chr> \"VinylSd\", \"MetalSd\", \"VinylSd\", \"Wd Sdng\", \"VinylSd\", \"…\n$ Exterior2nd   <chr> \"VinylSd\", \"MetalSd\", \"VinylSd\", \"Wd Shng\", \"VinylSd\", \"…\n$ MasVnrType    <chr> \"BrkFace\", \"None\", \"BrkFace\", \"None\", \"BrkFace\", \"None\",…\n$ MasVnrArea    <dbl> 196, 0, 162, 0, 350, 0, 186, 240, 0, 0, 0, 286, 0, 306, …\n$ ExterQual     <chr> \"Gd\", \"TA\", \"Gd\", \"TA\", \"Gd\", \"TA\", \"Gd\", \"TA\", \"TA\", \"T…\n$ ExterCond     <chr> \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"T…\n$ Foundation    <chr> \"PConc\", \"CBlock\", \"PConc\", \"BrkTil\", \"PConc\", \"Wood\", \"…\n$ BsmtQual      <chr> \"Gd\", \"Gd\", \"Gd\", \"TA\", \"Gd\", \"Gd\", \"Ex\", \"Gd\", \"TA\", \"T…\n$ BsmtCond      <chr> \"TA\", \"TA\", \"TA\", \"Gd\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"T…\n$ BsmtExposure  <chr> \"No\", \"Gd\", \"Mn\", \"No\", \"Av\", \"No\", \"Av\", \"Mn\", \"No\", \"N…\n$ BsmtFinType1  <chr> \"GLQ\", \"ALQ\", \"GLQ\", \"ALQ\", \"GLQ\", \"GLQ\", \"GLQ\", \"ALQ\", …\n$ BsmtFinSF1    <dbl> 706, 978, 486, 216, 655, 732, 1369, 859, 0, 851, 906, 99…\n$ BsmtFinType2  <chr> \"Unf\", \"Unf\", \"Unf\", \"Unf\", \"Unf\", \"Unf\", \"Unf\", \"BLQ\", …\n$ BsmtFinSF2    <dbl> 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ BsmtUnfSF     <dbl> 150, 284, 434, 540, 490, 64, 317, 216, 952, 140, 134, 17…\n$ TotalBsmtSF   <dbl> 856, 1262, 920, 756, 1145, 796, 1686, 1107, 952, 991, 10…\n$ Heating       <chr> \"GasA\", \"GasA\", \"GasA\", \"GasA\", \"GasA\", \"GasA\", \"GasA\", …\n$ HeatingQC     <chr> \"Ex\", \"Ex\", \"Ex\", \"Gd\", \"Ex\", \"Ex\", \"Ex\", \"Ex\", \"Gd\", \"E…\n$ CentralAir    <chr> \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"…\n$ Electrical    <chr> \"SBrkr\", \"SBrkr\", \"SBrkr\", \"SBrkr\", \"SBrkr\", \"SBrkr\", \"S…\n$ `1stFlrSF`    <dbl> 856, 1262, 920, 961, 1145, 796, 1694, 1107, 1022, 1077, …\n$ `2ndFlrSF`    <dbl> 854, 0, 866, 756, 1053, 566, 0, 983, 752, 0, 0, 1142, 0,…\n$ LowQualFinSF  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ GrLivArea     <dbl> 1710, 1262, 1786, 1717, 2198, 1362, 1694, 2090, 1774, 10…\n$ BsmtFullBath  <dbl> 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1,…\n$ BsmtHalfBath  <dbl> 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ FullBath      <dbl> 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 3, 1, 2, 1, 1, 1, 2, 1,…\n$ HalfBath      <dbl> 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,…\n$ BedroomAbvGr  <dbl> 3, 3, 3, 3, 4, 1, 3, 3, 2, 2, 3, 4, 2, 3, 2, 2, 2, 2, 3,…\n$ KitchenAbvGr  <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1,…\n$ KitchenQual   <chr> \"Gd\", \"TA\", \"Gd\", \"Gd\", \"Gd\", \"TA\", \"Gd\", \"TA\", \"TA\", \"T…\n$ TotRmsAbvGrd  <dbl> 8, 6, 6, 7, 9, 5, 7, 7, 8, 5, 5, 11, 4, 7, 5, 5, 5, 6, 6…\n$ Functional    <chr> \"Typ\", \"Typ\", \"Typ\", \"Typ\", \"Typ\", \"Typ\", \"Typ\", \"Typ\", …\n$ Fireplaces    <dbl> 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 0, 2, 0, 1, 1, 0, 1, 0, 0,…\n$ FireplaceQu   <chr> NA, \"TA\", \"TA\", \"Gd\", \"TA\", NA, \"Gd\", \"TA\", \"TA\", \"TA\", …\n$ GarageType    <chr> \"Attchd\", \"Attchd\", \"Attchd\", \"Detchd\", \"Attchd\", \"Attch…\n$ GarageYrBlt   <dbl> 2003, 1976, 2001, 1998, 2000, 1993, 2004, 1973, 1931, 19…\n$ GarageFinish  <chr> \"RFn\", \"RFn\", \"RFn\", \"Unf\", \"RFn\", \"Unf\", \"RFn\", \"RFn\", …\n$ GarageCars    <dbl> 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 3, 1, 3, 1, 2, 2, 2, 2,…\n$ GarageArea    <dbl> 548, 460, 608, 642, 836, 480, 636, 484, 468, 205, 384, 7…\n$ GarageQual    <chr> \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"Fa\", \"G…\n$ GarageCond    <chr> \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"T…\n$ PavedDrive    <chr> \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"…\n$ WoodDeckSF    <dbl> 0, 298, 0, 0, 192, 40, 255, 235, 90, 0, 0, 147, 140, 160…\n$ OpenPorchSF   <dbl> 61, 0, 42, 35, 84, 30, 57, 204, 0, 4, 0, 21, 0, 33, 213,…\n$ EnclosedPorch <dbl> 0, 0, 0, 272, 0, 0, 0, 228, 205, 0, 0, 0, 0, 0, 176, 0, …\n$ `3SsnPorch`   <dbl> 0, 0, 0, 0, 0, 320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ ScreenPorch   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, …\n$ PoolArea      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ PoolQC        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Fence         <chr> NA, NA, NA, NA, NA, \"MnPrv\", NA, NA, NA, NA, NA, NA, NA,…\n$ MiscFeature   <chr> NA, NA, NA, NA, NA, \"Shed\", NA, \"Shed\", NA, NA, NA, NA, …\n$ MiscVal       <dbl> 0, 0, 0, 0, 0, 700, 0, 350, 0, 0, 0, 0, 0, 0, 0, 0, 700,…\n$ MoSold        <dbl> 2, 5, 9, 2, 12, 10, 8, 11, 4, 1, 2, 7, 9, 8, 5, 7, 3, 10…\n$ YrSold        <dbl> 2008, 2007, 2008, 2006, 2008, 2009, 2007, 2009, 2008, 20…\n$ SaleType      <chr> \"WD\", \"WD\", \"WD\", \"WD\", \"WD\", \"WD\", \"WD\", \"WD\", \"WD\", \"W…\n$ SaleCondition <chr> \"Normal\", \"Normal\", \"Normal\", \"Abnorml\", \"Normal\", \"Norm…\n$ SalePrice     <dbl> 208500, 181500, 223500, 140000, 250000, 143000, 307000, …\n```\n\n\n:::\n\n```{.r .cell-code}\n  skim(ames_train)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |           |\n|:------------------------|:----------|\n|Name                     |ames_train |\n|Number of rows           |1460       |\n|Number of columns        |81         |\n|_______________________  |           |\n|Column type frequency:   |           |\n|character                |43         |\n|numeric                  |38         |\n|________________________ |           |\n|Group variables          |None       |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|MSZoning      |         0|          1.00|   2|   7|     0|        5|          0|\n|Street        |         0|          1.00|   4|   4|     0|        2|          0|\n|Alley         |      1369|          0.06|   4|   4|     0|        2|          0|\n|LotShape      |         0|          1.00|   3|   3|     0|        4|          0|\n|LandContour   |         0|          1.00|   3|   3|     0|        4|          0|\n|Utilities     |         0|          1.00|   6|   6|     0|        2|          0|\n|LotConfig     |         0|          1.00|   3|   7|     0|        5|          0|\n|LandSlope     |         0|          1.00|   3|   3|     0|        3|          0|\n|Neighborhood  |         0|          1.00|   5|   7|     0|       25|          0|\n|Condition1    |         0|          1.00|   4|   6|     0|        9|          0|\n|Condition2    |         0|          1.00|   4|   6|     0|        8|          0|\n|BldgType      |         0|          1.00|   4|   6|     0|        5|          0|\n|HouseStyle    |         0|          1.00|   4|   6|     0|        8|          0|\n|RoofStyle     |         0|          1.00|   3|   7|     0|        6|          0|\n|RoofMatl      |         0|          1.00|   4|   7|     0|        8|          0|\n|Exterior1st   |         0|          1.00|   5|   7|     0|       15|          0|\n|Exterior2nd   |         0|          1.00|   5|   7|     0|       16|          0|\n|MasVnrType    |         8|          0.99|   4|   7|     0|        4|          0|\n|ExterQual     |         0|          1.00|   2|   2|     0|        4|          0|\n|ExterCond     |         0|          1.00|   2|   2|     0|        5|          0|\n|Foundation    |         0|          1.00|   4|   6|     0|        6|          0|\n|BsmtQual      |        37|          0.97|   2|   2|     0|        4|          0|\n|BsmtCond      |        37|          0.97|   2|   2|     0|        4|          0|\n|BsmtExposure  |        38|          0.97|   2|   2|     0|        4|          0|\n|BsmtFinType1  |        37|          0.97|   3|   3|     0|        6|          0|\n|BsmtFinType2  |        38|          0.97|   3|   3|     0|        6|          0|\n|Heating       |         0|          1.00|   4|   5|     0|        6|          0|\n|HeatingQC     |         0|          1.00|   2|   2|     0|        5|          0|\n|CentralAir    |         0|          1.00|   1|   1|     0|        2|          0|\n|Electrical    |         1|          1.00|   3|   5|     0|        5|          0|\n|KitchenQual   |         0|          1.00|   2|   2|     0|        4|          0|\n|Functional    |         0|          1.00|   3|   4|     0|        7|          0|\n|FireplaceQu   |       690|          0.53|   2|   2|     0|        5|          0|\n|GarageType    |        81|          0.94|   6|   7|     0|        6|          0|\n|GarageFinish  |        81|          0.94|   3|   3|     0|        3|          0|\n|GarageQual    |        81|          0.94|   2|   2|     0|        5|          0|\n|GarageCond    |        81|          0.94|   2|   2|     0|        5|          0|\n|PavedDrive    |         0|          1.00|   1|   1|     0|        3|          0|\n|PoolQC        |      1453|          0.00|   2|   2|     0|        3|          0|\n|Fence         |      1179|          0.19|   4|   5|     0|        4|          0|\n|MiscFeature   |      1406|          0.04|   4|   4|     0|        4|          0|\n|SaleType      |         0|          1.00|   2|   5|     0|        9|          0|\n|SaleCondition |         0|          1.00|   6|   7|     0|        6|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|      mean|       sd|    p0|       p25|      p50|       p75|   p100|hist  |\n|:-------------|---------:|-------------:|---------:|--------:|-----:|---------:|--------:|---------:|------:|:-----|\n|Id            |         0|          1.00|    730.50|   421.61|     1|    365.75|    730.5|   1095.25|   1460|▇▇▇▇▇ |\n|MSSubClass    |         0|          1.00|     56.90|    42.30|    20|     20.00|     50.0|     70.00|    190|▇▅▂▁▁ |\n|LotFrontage   |       259|          0.82|     70.05|    24.28|    21|     59.00|     69.0|     80.00|    313|▇▃▁▁▁ |\n|LotArea       |         0|          1.00|  10516.83|  9981.26|  1300|   7553.50|   9478.5|  11601.50| 215245|▇▁▁▁▁ |\n|OverallQual   |         0|          1.00|      6.10|     1.38|     1|      5.00|      6.0|      7.00|     10|▁▂▇▅▁ |\n|OverallCond   |         0|          1.00|      5.58|     1.11|     1|      5.00|      5.0|      6.00|      9|▁▁▇▅▁ |\n|YearBuilt     |         0|          1.00|   1971.27|    30.20|  1872|   1954.00|   1973.0|   2000.00|   2010|▁▂▃▆▇ |\n|YearRemodAdd  |         0|          1.00|   1984.87|    20.65|  1950|   1967.00|   1994.0|   2004.00|   2010|▅▂▂▃▇ |\n|MasVnrArea    |         8|          0.99|    103.69|   181.07|     0|      0.00|      0.0|    166.00|   1600|▇▁▁▁▁ |\n|BsmtFinSF1    |         0|          1.00|    443.64|   456.10|     0|      0.00|    383.5|    712.25|   5644|▇▁▁▁▁ |\n|BsmtFinSF2    |         0|          1.00|     46.55|   161.32|     0|      0.00|      0.0|      0.00|   1474|▇▁▁▁▁ |\n|BsmtUnfSF     |         0|          1.00|    567.24|   441.87|     0|    223.00|    477.5|    808.00|   2336|▇▅▂▁▁ |\n|TotalBsmtSF   |         0|          1.00|   1057.43|   438.71|     0|    795.75|    991.5|   1298.25|   6110|▇▃▁▁▁ |\n|1stFlrSF      |         0|          1.00|   1162.63|   386.59|   334|    882.00|   1087.0|   1391.25|   4692|▇▅▁▁▁ |\n|2ndFlrSF      |         0|          1.00|    346.99|   436.53|     0|      0.00|      0.0|    728.00|   2065|▇▃▂▁▁ |\n|LowQualFinSF  |         0|          1.00|      5.84|    48.62|     0|      0.00|      0.0|      0.00|    572|▇▁▁▁▁ |\n|GrLivArea     |         0|          1.00|   1515.46|   525.48|   334|   1129.50|   1464.0|   1776.75|   5642|▇▇▁▁▁ |\n|BsmtFullBath  |         0|          1.00|      0.43|     0.52|     0|      0.00|      0.0|      1.00|      3|▇▆▁▁▁ |\n|BsmtHalfBath  |         0|          1.00|      0.06|     0.24|     0|      0.00|      0.0|      0.00|      2|▇▁▁▁▁ |\n|FullBath      |         0|          1.00|      1.57|     0.55|     0|      1.00|      2.0|      2.00|      3|▁▇▁▇▁ |\n|HalfBath      |         0|          1.00|      0.38|     0.50|     0|      0.00|      0.0|      1.00|      2|▇▁▅▁▁ |\n|BedroomAbvGr  |         0|          1.00|      2.87|     0.82|     0|      2.00|      3.0|      3.00|      8|▁▇▂▁▁ |\n|KitchenAbvGr  |         0|          1.00|      1.05|     0.22|     0|      1.00|      1.0|      1.00|      3|▁▇▁▁▁ |\n|TotRmsAbvGrd  |         0|          1.00|      6.52|     1.63|     2|      5.00|      6.0|      7.00|     14|▂▇▇▁▁ |\n|Fireplaces    |         0|          1.00|      0.61|     0.64|     0|      0.00|      1.0|      1.00|      3|▇▇▁▁▁ |\n|GarageYrBlt   |        81|          0.94|   1978.51|    24.69|  1900|   1961.00|   1980.0|   2002.00|   2010|▁▁▅▅▇ |\n|GarageCars    |         0|          1.00|      1.77|     0.75|     0|      1.00|      2.0|      2.00|      4|▁▃▇▂▁ |\n|GarageArea    |         0|          1.00|    472.98|   213.80|     0|    334.50|    480.0|    576.00|   1418|▂▇▃▁▁ |\n|WoodDeckSF    |         0|          1.00|     94.24|   125.34|     0|      0.00|      0.0|    168.00|    857|▇▂▁▁▁ |\n|OpenPorchSF   |         0|          1.00|     46.66|    66.26|     0|      0.00|     25.0|     68.00|    547|▇▁▁▁▁ |\n|EnclosedPorch |         0|          1.00|     21.95|    61.12|     0|      0.00|      0.0|      0.00|    552|▇▁▁▁▁ |\n|3SsnPorch     |         0|          1.00|      3.41|    29.32|     0|      0.00|      0.0|      0.00|    508|▇▁▁▁▁ |\n|ScreenPorch   |         0|          1.00|     15.06|    55.76|     0|      0.00|      0.0|      0.00|    480|▇▁▁▁▁ |\n|PoolArea      |         0|          1.00|      2.76|    40.18|     0|      0.00|      0.0|      0.00|    738|▇▁▁▁▁ |\n|MiscVal       |         0|          1.00|     43.49|   496.12|     0|      0.00|      0.0|      0.00|  15500|▇▁▁▁▁ |\n|MoSold        |         0|          1.00|      6.32|     2.70|     1|      5.00|      6.0|      8.00|     12|▃▆▇▃▃ |\n|YrSold        |         0|          1.00|   2007.82|     1.33|  2006|   2007.00|   2008.0|   2009.00|   2010|▇▇▇▇▅ |\n|SalePrice     |         0|          1.00| 180921.20| 79442.50| 34900| 129975.00| 163000.0| 214000.00| 755000|▇▅▁▁▁ |\n\n\n:::\n:::\n\n\n## Data Transformation\n\nAfter we inspect and match with the data description, some columns with missing data actually not really have missing data. For example with the column \"Fence\", the value \"na\" in this column does not mean that the value does not exist but it means that there is no \"fence\" in the house so we can replace the value \"na\" with \"no\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\names_train <- ames_train |>\n  mutate(across(starts_with(\"Bsmt\"), ~ replace_na(., \"No\")))\n\names_train <- ames_train |>\n  rename(GrgYrBlt = GarageYrBlt) |>\n  mutate(across(starts_with(\"Garage\"), ~ replace_na(., \"No\"))) |>\n  rename(GarageYrBlt = GrgYrBlt)\n\names_train <- ames_train |>\n  mutate(across(c(Alley, FireplaceQu, PoolQC, Fence, MiscFeature, MasVnrType), ~ replace_na(., \"No\")))\n\names_train <- ames_train |>\n  mutate(MasVnrArea = replace_na(MasVnrArea, 0))\n\names_train <- ames_train |>\n  mutate(across(where(is.character), as.factor))\n```\n:::\n\n\n## Explore the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n ggplot(data = ames_train) +\n  geom_histogram(aes(x = SalePrice), bins = 50) +\n  scale_x_log10() \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = ames_train) +\n  geom_bar(aes(x = OverallCond))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n\n\n## Build a model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nhouse_split <- initial_split(ames_train)\nhouse_train <- training(house_split)\nhouse_test <- testing(house_split)\n\nset.seed(88)\nhouse_fold <- vfold_cv(ames_train, v = 10, repeats = 1)\n```\n:::\n\n\nThis time, because there are so many features in the dataset, we will try dimensionality reduction using principal component analysis (PCA) and independent component analysis (ICA). We will make three recipes which are basic recipe, pca recipe, and ica recipe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbasic_recipe <- recipe(SalePrice ~ . , data = house_train) |> \n  update_role(Id, new_role = \"id\") |> \n  step_impute_knn(all_predictors()) |> \n  step_zv(all_predictors()) |> \n  step_normalize(all_numeric_predictors()) |> \n  step_corr(all_numeric_predictors(), threshold = 0.95) |> \n  step_dummy(all_nominal_predictors()) \n\npca_recipe <- recipe(SalePrice ~ . , data = house_train) |>\n  update_role(Id, new_role = \"id\") |> \n  step_impute_knn(all_predictors()) |> \n  step_zv(all_predictors()) |> \n  step_normalize(all_numeric_predictors()) |> \n  step_corr(all_numeric_predictors(), threshold = 0.95) |> \n  step_dummy(all_nominal_predictors()) |> \n  step_pca(all_predictors(), num_comp = 8) \n\nprep_pca <- prep(pca_recipe) \n \nbaked_pca <- bake(prep_pca, new_data = NULL)\n\nhead(baked_pca)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 10\n     Id SalePrice   PC1   PC2    PC3    PC4     PC5    PC6     PC7    PC8\n  <dbl>     <dbl> <dbl> <dbl>  <dbl>  <dbl>   <dbl>  <dbl>   <dbl>  <dbl>\n1   415    228000  5.10 -2.91 -2.06   0.739 -1.12   -2.31   0.0254  2.18 \n2   463     62383  5.01  3.62  0.619 -1.32   0.0369 -0.529 -0.365   0.195\n3   179    501837  4.53 -6.36  3.42  -1.87   0.109   1.67  -0.0897  0.258\n4   526    176000  5.29 -1.56  0.638  2.27   2.39   -0.718 -0.982   0.366\n5   195    127000  5.21  3.13  1.16   0.152  0.613  -0.452  0.700  -0.614\n6   938    253000  5.44 -2.83 -1.13   1.93  -0.318  -0.463  0.339  -1.20 \n```\n\n\n:::\n\n```{.r .cell-code}\nica_recipe <- recipe(SalePrice ~ . , data = house_train) |>\n  update_role(Id, new_role = \"id\") |> \n  step_impute_knn(all_predictors()) |> \n  step_zv(all_predictors()) |> \n  step_normalize(all_numeric_predictors()) |> \n  step_corr(all_numeric_predictors(), threshold = 0.95) |> \n  step_dummy(all_nominal_predictors()) |> \n  step_ica(all_predictors() , num_comp = 8)\n\nprep_ica <- prep(ica_recipe) \n\nbaked_ica <- bake(prep_ica, new_data = NULL)\n\nhead(baked_ica)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 10\n     Id SalePrice     IC1    IC2    IC3    IC4    IC5    IC6    IC7    IC8\n  <dbl>     <dbl>   <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n1   415    228000  0.0347  2.63   0.730  0.667  0.428  1.54   1.10  -0.971\n2   463     62383 -0.193   0.606  0.316  0.352 -0.348 -0.485 -0.133  1.24 \n3   179    501837 -0.536  -1.50  -2.74  -0.147  0.961 -1.80   1.07  -1.15 \n4   526    176000  0.964   0.181  1.41   0.323 -0.497 -0.851  0.586 -1.34 \n5   195    127000  0.367  -0.516  0.556  0.508  0.439 -0.497 -0.623  0.905\n6   938    253000  0.684  -0.138  0.266  0.367 -0.134  1.11  -0.884 -1.30 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbaked_pca |> \n  ggplot(aes(x = PC1, y = PC2)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nbaked_ica |> \n  ggplot(aes(x = IC1, y = IC2)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\n\nFor the model, we will build a single layer neural network and we also gonna tune the paramater for hidden units, penalty, epochs, and learn rate.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndoParallel::registerDoParallel()\nmlp_model <- mlp(hidden_units = tune(), penalty = tune(), epochs = tune(), learn_rate = tune()) |> \n  set_mode(\"regression\") |> \n  set_engine(\"brulee\")\n\nhouse_wf <- workflow_set(preproc = list(pca = pca_recipe, ica = ica_recipe, basic = basic_recipe), models = list(mlp_model))\n\nhouse_res <- workflow_map(house_wf, \n                          resamples = house_fold,\n                          seed = 999,\n                          grid = 5, \n                          control = control_grid(parallel_over = \"everything\", save_pred = TRUE))\n```\n:::\n\n\n## Evaluate the model\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollect_metrics(house_res) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 30 × 9\n   wflow_id .config       preproc model .metric .estimator    mean     n std_err\n   <chr>    <chr>         <chr>   <chr> <chr>   <chr>        <dbl> <int>   <dbl>\n 1 pca_mlp  Preprocessor… recipe  mlp   rmse    standard   4.88e+4    10 5.56e+3\n 2 pca_mlp  Preprocessor… recipe  mlp   rsq     standard   6.28e-1    10 8.24e-2\n 3 pca_mlp  Preprocessor… recipe  mlp   rmse    standard   3.87e+4    10 5.18e+3\n 4 pca_mlp  Preprocessor… recipe  mlp   rsq     standard   7.71e-1    10 5.11e-2\n 5 pca_mlp  Preprocessor… recipe  mlp   rmse    standard   3.38e+4    10 3.06e+3\n 6 pca_mlp  Preprocessor… recipe  mlp   rsq     standard   8.22e-1    10 2.83e-2\n 7 pca_mlp  Preprocessor… recipe  mlp   rmse    standard   3.69e+4    10 3.32e+3\n 8 pca_mlp  Preprocessor… recipe  mlp   rsq     standard   7.90e-1    10 3.57e-2\n 9 pca_mlp  Preprocessor… recipe  mlp   rmse    standard   3.66e+4    10 4.81e+3\n10 pca_mlp  Preprocessor… recipe  mlp   rsq     standard   7.98e-1    10 4.56e-2\n# ℹ 20 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nhouse_res |> \n  rank_results() |> \n  filter(.metric == 'rmse')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 15 × 9\n   wflow_id  .config       .metric   mean std_err     n preprocessor model  rank\n   <chr>     <chr>         <chr>    <dbl>   <dbl> <int> <chr>        <chr> <int>\n 1 basic_mlp Preprocessor… rmse    3.29e4   4392.    10 recipe       mlp       1\n 2 basic_mlp Preprocessor… rmse    3.36e4   4019.    10 recipe       mlp       2\n 3 pca_mlp   Preprocessor… rmse    3.38e4   3056.    10 recipe       mlp       3\n 4 basic_mlp Preprocessor… rmse    3.47e4   4458.    10 recipe       mlp       4\n 5 ica_mlp   Preprocessor… rmse    3.64e4   3293.    10 recipe       mlp       5\n 6 pca_mlp   Preprocessor… rmse    3.66e4   4811.    10 recipe       mlp       6\n 7 pca_mlp   Preprocessor… rmse    3.69e4   3323.    10 recipe       mlp       7\n 8 ica_mlp   Preprocessor… rmse    3.71e4   4168.    10 recipe       mlp       8\n 9 ica_mlp   Preprocessor… rmse    3.79e4   3987.    10 recipe       mlp       9\n10 ica_mlp   Preprocessor… rmse    3.82e4   4674.    10 recipe       mlp      10\n11 pca_mlp   Preprocessor… rmse    3.87e4   5180.    10 recipe       mlp      11\n12 basic_mlp Preprocessor… rmse    4.10e4   5132.    10 recipe       mlp      12\n13 pca_mlp   Preprocessor… rmse    4.88e4   5559.    10 recipe       mlp      13\n14 basic_mlp Preprocessor… rmse    5.31e4   9738.    10 recipe       mlp      14\n15 ica_mlp   Preprocessor… rmse    4.50e5 404814.    10 recipe       mlp      15\n```\n\n\n:::\n\n```{.r .cell-code}\nautoplot(house_res, rank_metric = 'rmse',  metric = 'rmse' , select_best = TRUE, type = 'wflow_id' )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nThe results actually show that the basic recipe without using the dimension reduction have a better performance, but for this time we will use the pca because the results are close to basic recipe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbest_tune <- house_res |> \n  extract_workflow_set_result(id = 'pca_mlp') |> \n  select_best(metric = 'rmse')\n\nbest_tune\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 5\n  hidden_units  penalty epochs learn_rate .config             \n         <int>    <dbl>  <int>      <dbl> <chr>               \n1            4 3.90e-10    247      0.289 Preprocessor1_Model3\n```\n\n\n:::\n\n```{.r .cell-code}\nfinal_model <- house_res |> \n  extract_workflow('pca_mlp') |> \n  finalize_workflow(best_tune) |> \n  last_fit(split = house_split)\n\ncollect_metrics(final_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  <chr>   <chr>          <dbl> <chr>               \n1 rmse    standard   32408.    Preprocessor1_Model1\n2 rsq     standard       0.844 Preprocessor1_Model1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresults <-  final_model |> \n  collect_predictions() |> \n  select(.pred, SalePrice)\n\nresults\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 365 × 2\n     .pred SalePrice\n     <dbl>     <dbl>\n 1 229737.    223500\n 2 255013.    279500\n 3 149332.    157000\n 4 319111.    325300\n 5 116824.    139400\n 6 255112.    230000\n 7 116824.    134800\n 8 116824.     68500\n 9 185617.    179900\n10 134922.    144000\n# ℹ 355 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nresults |> \n  ggplot(aes(x = SalePrice, y = .pred)) +\n  geom_point() +\n  geom_abline(lty = 2) +\n  coord_obs_pred()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n## Predict test set and import the results\n\n\n::: {.cell}\n\n```{.r .cell-code}\npred <- extract_workflow(final_model) |> \n  predict(ames_test)\n\npred\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,459 × 1\n     .pred\n     <dbl>\n 1 116824.\n 2 142262.\n 3 185944.\n 4 205764.\n 5 164173.\n 6 172864.\n 7 184034.\n 8 162081.\n 9 187495.\n10 116824.\n# ℹ 1,449 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nsubmission <- ames_test |> \n  select(Id) |> \n  bind_cols(pred) |> \n  rename(SalePrice = .pred)\n\nsubmission\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,459 × 2\n      Id SalePrice\n   <dbl>     <dbl>\n 1  1461   116824.\n 2  1462   142262.\n 3  1463   185944.\n 4  1464   205764.\n 5  1465   164173.\n 6  1466   172864.\n 7  1467   184034.\n 8  1468   162081.\n 9  1469   187495.\n10  1470   116824.\n# ℹ 1,449 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_csv(submission, \"submission.csv\")\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}