{
  "hash": "02218941f3bde9898f8e063e81497de4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Spaceship Titanic\"\nauthor: \"Nusa Seldi\"\ndate: \"2024-07-08\"\ncategories: [code, tidymodels, titanic spaceship, lightgbm, impute, missing data]\ncode-fold: true \ncode-tools: true\ntable-of-contents: true\n---\n\n\nImpute the missing data for Spaceship Titanic and predict the passengers that transported to alternate dimension using Lightgbm\n\n### Introduction\n\n[Spaceship Titanic](https://www.kaggle.com/competitions/spaceship-titanic/overview) is part of kaggle getting started competitions aims to introduce participants to basic machine learning concepts and facilitate networking within the Kaggle community. In this competition, our job is to predict which passengers are transported to an alternate dimension during the Spaceship Titanic's collision with the spacetime anomaly. To assist in this prediction, we are provided with personal records retrieved from the ship's damaged computer system.\n\nWe will build a classification model to predict which passengers are transported using Lightgbm. Lets get started!\n\n### Import Library\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(bonsai)\nlibrary(vip)\nlibrary(lightgbm)\n```\n:::\n\n\n### Load dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspaceship_train <- read_csv('train.csv')\nspaceship_test <- read_csv('test.csv')\n```\n:::\n\n\n### Check the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspaceship_train |> head(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 14\n   PassengerId HomePlanet CryoSleep Cabin Destination     Age VIP   RoomService\n   <chr>       <chr>      <lgl>     <chr> <chr>         <dbl> <lgl>       <dbl>\n 1 0001_01     Europa     FALSE     B/0/P TRAPPIST-1e      39 FALSE           0\n 2 0002_01     Earth      FALSE     F/0/S TRAPPIST-1e      24 FALSE         109\n 3 0003_01     Europa     FALSE     A/0/S TRAPPIST-1e      58 TRUE           43\n 4 0003_02     Europa     FALSE     A/0/S TRAPPIST-1e      33 FALSE           0\n 5 0004_01     Earth      FALSE     F/1/S TRAPPIST-1e      16 FALSE         303\n 6 0005_01     Earth      FALSE     F/0/P PSO J318.5-22    44 FALSE           0\n 7 0006_01     Earth      FALSE     F/2/S TRAPPIST-1e      26 FALSE          42\n 8 0006_02     Earth      TRUE      G/0/S TRAPPIST-1e      28 FALSE           0\n 9 0007_01     Earth      FALSE     F/3/S TRAPPIST-1e      35 FALSE           0\n10 0008_01     Europa     TRUE      B/1/P 55 Cancri e      14 FALSE           0\n# ℹ 6 more variables: FoodCourt <dbl>, ShoppingMall <dbl>, Spa <dbl>,\n#   VRDeck <dbl>, Name <chr>, Transported <lgl>\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(spaceship_train)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 8,693\nColumns: 14\n$ PassengerId  <chr> \"0001_01\", \"0002_01\", \"0003_01\", \"0003_02\", \"0004_01\", \"0…\n$ HomePlanet   <chr> \"Europa\", \"Earth\", \"Europa\", \"Europa\", \"Earth\", \"Earth\", …\n$ CryoSleep    <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FA…\n$ Cabin        <chr> \"B/0/P\", \"F/0/S\", \"A/0/S\", \"A/0/S\", \"F/1/S\", \"F/0/P\", \"F/…\n$ Destination  <chr> \"TRAPPIST-1e\", \"TRAPPIST-1e\", \"TRAPPIST-1e\", \"TRAPPIST-1e…\n$ Age          <dbl> 39, 24, 58, 33, 16, 44, 26, 28, 35, 14, 34, 45, 32, 48, 2…\n$ VIP          <lgl> FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FA…\n$ RoomService  <dbl> 0, 109, 43, 0, 303, 0, 42, 0, 0, 0, 0, 39, 73, 719, 8, 32…\n$ FoodCourt    <dbl> 0, 9, 3576, 1283, 70, 483, 1539, 0, 785, 0, 0, 7295, 0, 1…\n$ ShoppingMall <dbl> 0, 25, 0, 371, 151, 0, 3, 0, 17, 0, NA, 589, 1123, 65, 12…\n$ Spa          <dbl> 0, 549, 6715, 3329, 565, 291, 0, 0, 216, 0, 0, 110, 0, 0,…\n$ VRDeck       <dbl> 0, 44, 49, 193, 2, 0, 0, NA, 0, 0, 0, 124, 113, 24, 7, 0,…\n$ Name         <chr> \"Maham Ofracculy\", \"Juanna Vines\", \"Altark Susent\", \"Sola…\n$ Transported  <lgl> FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, …\n```\n\n\n:::\n:::\n\n\n### Check missing values\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspaceship_train |> summarise_all(~sum(is.na(.))) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 14\n  PassengerId HomePlanet CryoSleep Cabin Destination   Age   VIP RoomService\n        <int>      <int>     <int> <int>       <int> <int> <int>       <int>\n1           0        201       217   199         182   179   203         181\n# ℹ 6 more variables: FoodCourt <int>, ShoppingMall <int>, Spa <int>,\n#   VRDeck <int>, Name <int>, Transported <int>\n```\n\n\n:::\n\n```{.r .cell-code}\nspaceship_test |> summarise_all(~sum(is.na(.)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 13\n  PassengerId HomePlanet CryoSleep Cabin Destination   Age   VIP RoomService\n        <int>      <int>     <int> <int>       <int> <int> <int>       <int>\n1           0         87        93   100          92    91    93          82\n# ℹ 5 more variables: FoodCourt <int>, ShoppingMall <int>, Spa <int>,\n#   VRDeck <int>, Name <int>\n```\n\n\n:::\n:::\n\n\n### Data transformation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspaceship_train <-  spaceship_train |> \n  separate_wider_delim(cols = Cabin, delim = '/', names = c('deck', 'number', 'side')) \n\nspaceship_test <-  spaceship_test |> \n  separate_wider_delim(cols = Cabin, delim = '/', names = c('deck', 'number', 'side'))  \n\nspaceship_train <-  spaceship_train |> \n  mutate(across(c(HomePlanet, CryoSleep, deck, side, Destination, VIP, Transported), as.factor)) |> \n  mutate(number = as.numeric(number)) |> \n  select(-Name, -PassengerId)\n\nspaceship_test <-  spaceship_test |> \n  mutate(across(c(HomePlanet, CryoSleep, deck, side, Destination, VIP), as.factor)) |> \n  mutate(number = as.numeric(number)) |> \n  select(-Name)\n\nstr(spaceship_train)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [8,693 × 14] (S3: tbl_df/tbl/data.frame)\n $ HomePlanet  : Factor w/ 3 levels \"Earth\",\"Europa\",..: 2 1 2 2 1 1 1 1 1 2 ...\n $ CryoSleep   : Factor w/ 2 levels \"FALSE\",\"TRUE\": 1 1 1 1 1 1 1 2 1 2 ...\n $ deck        : Factor w/ 8 levels \"A\",\"B\",\"C\",\"D\",..: 2 6 1 1 6 6 6 7 6 2 ...\n $ number      : num [1:8693] 0 0 0 0 1 0 2 0 3 1 ...\n $ side        : Factor w/ 2 levels \"P\",\"S\": 1 2 2 2 2 1 2 2 2 1 ...\n $ Destination : Factor w/ 3 levels \"55 Cancri e\",..: 3 3 3 3 3 2 3 3 3 1 ...\n $ Age         : num [1:8693] 39 24 58 33 16 44 26 28 35 14 ...\n $ VIP         : Factor w/ 2 levels \"FALSE\",\"TRUE\": 1 1 2 1 1 1 1 1 1 1 ...\n $ RoomService : num [1:8693] 0 109 43 0 303 0 42 0 0 0 ...\n $ FoodCourt   : num [1:8693] 0 9 3576 1283 70 ...\n $ ShoppingMall: num [1:8693] 0 25 0 371 151 0 3 0 17 0 ...\n $ Spa         : num [1:8693] 0 549 6715 3329 565 ...\n $ VRDeck      : num [1:8693] 0 44 49 193 2 0 0 NA 0 0 ...\n $ Transported : Factor w/ 2 levels \"FALSE\",\"TRUE\": 1 2 1 1 2 2 2 2 2 2 ...\n```\n\n\n:::\n:::\n\n\n### Explore the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspaceship_train |> \n  drop_na(CryoSleep) |> \n  ggplot(aes(x = CryoSleep, fill = Transported)) +\n  geom_bar(position = \"dodge\") +\n  scale_fill_brewer(palette = \"Paired\") \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nspaceship_train |> \n  ggplot(aes(x = VIP, fill = Transported)) +\n  geom_bar(position = \"dodge\") +\n  scale_fill_brewer(palette = \"Paired\") \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n\n```{.r .cell-code}\nspaceship_train |> \n  ggplot(aes(x = HomePlanet, fill = Transported)) +\n  geom_bar(position = \"dodge\") +\n  scale_fill_brewer(palette = \"Paired\") \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-3.png){width=672}\n:::\n\n```{.r .cell-code}\nspaceship_train |> \n  ggplot(aes(x = Transported,  Age)) +\n  geom_boxplot() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-4.png){width=672}\n:::\n\n```{.r .cell-code}\nspaceship_train |> \n  ggplot(aes(x = RoomService, y = FoodCourt, color = Transported)) +\n  geom_point(alpha = 0.5) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-5.png){width=672}\n:::\n\n```{.r .cell-code}\nspaceship_train |> \n  ggplot(aes(x = VRDeck, y = Spa, color = Transported)) +\n  geom_point(alpha = 0.5) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-6.png){width=672}\n:::\n:::\n\n\n### Build a model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(789)\nspaceship_split <- initial_split(spaceship_train, prop = 0.8, strata = Transported)\ntrain <- training(spaceship_split)\ntest <- testing(spaceship_split)\n\nset.seed(777)\nspaceship_fold <- vfold_cv(train, v = 10, strata = Transported)\n\nspaceship_recipe <- recipe(Transported ~ ., data = train) |> \n  step_impute_knn(CryoSleep) |> \n  step_impute_median(all_numeric_predictors(), -VRDeck, -Spa) |> \n  step_impute_linear(VRDeck, Spa, impute_with = imp_vars(RoomService, FoodCourt, ShoppingMall)) |> \n  step_zv(all_predictors()) \n  \nbt_spec <- boost_tree(trees = 200, mtry = tune(), min_n = tune(), tree_depth = tune()) |> \n  set_mode(\"classification\") |> \n  set_engine(\"lightgbm\")\n\nspaceship_wf <- workflow() |> \n  add_recipe(spaceship_recipe) |> \n  add_model(bt_spec)\n\nset.seed(1234)\ndoParallel::registerDoParallel()\nbt_fit <- spaceship_wf |> \n  tune_grid(resamples = spaceship_fold,\n            grid = 5,\n            control = control_resamples(save_pred = TRUE))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ni Creating pre-processing data to finalize unknown parameter: mtry\n```\n\n\n:::\n:::\n\n\n### Evaluate the model\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollect_metrics(bt_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 9\n    mtry min_n tree_depth .metric  .estimator  mean     n std_err .config       \n   <int> <int>      <int> <chr>    <chr>      <dbl> <int>   <dbl> <chr>         \n 1     6     7         12 accuracy binary     0.807    10 0.00578 Preprocessor1…\n 2     6     7         12 roc_auc  binary     0.899    10 0.00445 Preprocessor1…\n 3    12    16          9 accuracy binary     0.805    10 0.00686 Preprocessor1…\n 4    12    16          9 roc_auc  binary     0.896    10 0.00493 Preprocessor1…\n 5     3    31          3 accuracy binary     0.803    10 0.00455 Preprocessor1…\n 6     3    31          3 roc_auc  binary     0.896    10 0.00390 Preprocessor1…\n 7    10    37          4 accuracy binary     0.811    10 0.00447 Preprocessor1…\n 8    10    37          4 roc_auc  binary     0.901    10 0.00439 Preprocessor1…\n 9     5    21         12 accuracy binary     0.805    10 0.00700 Preprocessor1…\n10     5    21         12 roc_auc  binary     0.898    10 0.00445 Preprocessor1…\n```\n\n\n:::\n\n```{.r .cell-code}\nshow_best(bt_fit, metric = \"roc_auc\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 9\n   mtry min_n tree_depth .metric .estimator  mean     n std_err .config         \n  <int> <int>      <int> <chr>   <chr>      <dbl> <int>   <dbl> <chr>           \n1    10    37          4 roc_auc binary     0.901    10 0.00439 Preprocessor1_M…\n2     6     7         12 roc_auc binary     0.899    10 0.00445 Preprocessor1_M…\n3     5    21         12 roc_auc binary     0.898    10 0.00445 Preprocessor1_M…\n4    12    16          9 roc_auc binary     0.896    10 0.00493 Preprocessor1_M…\n5     3    31          3 roc_auc binary     0.896    10 0.00390 Preprocessor1_M…\n```\n\n\n:::\n\n```{.r .cell-code}\nbest_tune <- select_best(bt_fit, metric = 'roc_auc')\n\nfinal_wf <- finalize_workflow(spaceship_wf, best_tune)\n\nspaceship_final <- final_wf |> \n  last_fit(spaceship_split)\n\ncollect_metrics(spaceship_final)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 4\n  .metric  .estimator .estimate .config             \n  <chr>    <chr>          <dbl> <chr>               \n1 accuracy binary         0.816 Preprocessor1_Model1\n2 roc_auc  binary         0.905 Preprocessor1_Model1\n```\n\n\n:::\n\n```{.r .cell-code}\nresults <- collect_predictions(spaceship_final)\n\nresults |> \n  conf_mat(truth = Transported, estimate = .pred_class) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          Truth\nPrediction FALSE TRUE\n     FALSE   707  164\n     TRUE    156  712\n```\n\n\n:::\n\n```{.r .cell-code}\nprecision(results, truth = Transported, estimate = .pred_class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .metric   .estimator .estimate\n  <chr>     <chr>          <dbl>\n1 precision binary         0.812\n```\n\n\n:::\n\n```{.r .cell-code}\nf_meas(results, truth = Transported, estimate = .pred_class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 f_meas  binary         0.815\n```\n\n\n:::\n\n```{.r .cell-code}\nspaceship_final |> \n  extract_fit_parsnip() |> \n  vip(num_features = 8, aesthetics = list(fill = \"midnightblue\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfinal_wf <- extract_workflow(spaceship_final)\n\npred <- predict(final_wf, spaceship_test)\n\npred <-  pred |> \n  mutate(Transported = case_match(.pred_class, \"TRUE\" ~ \"True\",\n            \"FALSE\" ~ \"False\")) |> \n  select(-.pred_class)\npred\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4,277 × 1\n   Transported\n   <chr>      \n 1 True       \n 2 False      \n 3 True       \n 4 True       \n 5 True       \n 6 True       \n 7 True       \n 8 True       \n 9 True       \n10 True       \n# ℹ 4,267 more rows\n```\n\n\n:::\n:::\n\n\n### Export dataset for submission\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsubmission <- spaceship_test |> \n  select(PassengerId) |> \n  bind_cols(pred) \n\nsubmission\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4,277 × 2\n   PassengerId Transported\n   <chr>       <chr>      \n 1 0013_01     True       \n 2 0018_01     False      \n 3 0019_01     True       \n 4 0021_01     True       \n 5 0023_01     True       \n 6 0027_01     True       \n 7 0029_01     True       \n 8 0032_01     True       \n 9 0032_02     True       \n10 0033_01     True       \n# ℹ 4,267 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nwrite_csv(submission, file = 'submission-2.csv')\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}